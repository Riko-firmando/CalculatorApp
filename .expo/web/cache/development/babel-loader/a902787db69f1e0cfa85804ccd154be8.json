{"ast":null,"code":"import React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NativeBaseProvider, Text, Box, extendTheme, Button, Pressable } from \"native-base\";\nimport InputButton from \"./src/components/inputButton\";\nvar buttons = [[\"CLEAR\", \"DEL\"], [\"7\", \"8\", \"9\", \"/\"], [\"4\", \"5\", \"6\", \"x\"], [\"1\", \"2\", \"3\", \"-\"], [\"0\", \".\", \"=\", \"+\"]];\nexport default function App() {\n  var theme = extendTheme({\n    primary: {\n      50: \"#E3F2F9\",\n      100: \"#C5E4F3\",\n      200: \"#A2D4EC\",\n      300: \"#7AC1E4\",\n      400: \"#47A9DA\",\n      500: \"#0088CC\",\n      600: \"#007AB8\",\n      700: \"#006BA1\",\n      800: \"#005885\",\n      900: \"#003F5E\"\n    },\n    amber: {\n      400: \"#d97706\"\n    }\n  });\n  return React.createElement(NativeBaseProvider, {\n    theme: theme\n  }, React.createElement(Box, null, buttons.map(function (buttonRows, idx) {\n    return React.createElement(Box, {\n      style: style.container\n    }, buttonRows.map(function (buttonitem, idx) {\n      return React.createElement(Pressable, {\n        style: style.button\n      }, function (_ref) {\n        var isHovered = _ref.isHovered,\n            isFocused = _ref.isFocused,\n            isPressed = _ref.isPressed;\n        return React.createElement(Button, {\n          bg: isFocused ? \"primary.900\" : \"primary.400\",\n          key: idx\n        }, React.createElement(Text, {\n          style: style.text\n        }, buttonitem));\n      });\n    }), React.createElement(\"br\", null));\n  })));\n}\nvar style = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  },\n  button: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 1.5,\n    width: 100\n  },\n  text: {\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Documents/dumbways/project/calcApp/App.js"],"names":["React","useState","NativeBaseProvider","Text","Box","extendTheme","Button","Pressable","InputButton","buttons","App","theme","primary","amber","map","buttonRows","idx","style","container","buttonitem","button","isHovered","isFocused","isPressed","text","StyleSheet","create","flexDirection","flex","justifyContent","alignItems","margin","width","color"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SACEC,kBADF,EAEEC,IAFF,EAGEC,GAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,SANF,QAOO,aAPP;AAQA,OAAOC,WAAP;AAEA,IAAMC,OAAO,GAAG,CACd,CAAC,OAAD,EAAU,KAAV,CADc,EAEd,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAFc,EAGd,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAHc,EAId,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAJc,EAKd,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CALc,CAAhB;AAQA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,KAAK,GAAGN,WAAW,CAAC;AAExBO,IAAAA,OAAO,EAAE;AACP,UAAI,SADG;AAEP,WAAK,SAFE;AAGP,WAAK,SAHE;AAIP,WAAK,SAJE;AAKP,WAAK,SALE;AAMP,WAAK,SANE;AAOP,WAAK,SAPE;AAQP,WAAK,SARE;AASP,WAAK,SATE;AAUP,WAAK;AAVE,KAFe;AAexBC,IAAAA,KAAK,EAAE;AACL,WAAK;AADA;AAfiB,GAAD,CAAzB;AAoBA,SACE,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAEF;AAA3B,KACE,oBAAC,GAAD,QACGF,OAAO,CAACK,GAAR,CAAY,UAACC,UAAD,EAAaC,GAAb;AAAA,WACX,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAEC,KAAK,CAACC;AAAlB,OACGH,UAAU,CAACD,GAAX,CAAe,UAACK,UAAD,EAAaH,GAAb;AAAA,aACd,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEC,KAAK,CAACG;AAAxB,SACG,gBAAyC;AAAA,YAAtCC,SAAsC,QAAtCA,SAAsC;AAAA,YAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,YAAhBC,SAAgB,QAAhBA,SAAgB;AACxC,eACE,oBAAC,MAAD;AACE,UAAA,EAAE,EAAED,SAAS,GAAG,aAAH,GAAmB,aADlC;AAGE,UAAA,GAAG,EAAEN;AAHP,WAKE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,KAAK,CAACO;AAAnB,WAA0BL,UAA1B,CALF,CADF;AASD,OAXH,CADc;AAAA,KAAf,CADH,EAgBE,+BAhBF,CADW;AAAA,GAAZ,CADH,CADF,CADF;AA0BD;AAED,IAAMF,KAAK,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC9BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,aAAa,EAAE;AADN,GADmB;AAI9BP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINC,IAAAA,MAAM,EAAE,GAJF;AAKNC,IAAAA,KAAK,EAAE;AALD,GAJsB;AAc9BR,EAAAA,IAAI,EAAE;AACJS,IAAAA,KAAK,EAAE;AADH;AAdwB,CAAlB,CAAd","sourcesContent":["import React, { useState } from \"react\";\nimport { TouchableOpacity, StyleSheet } from \"react-native\";\nimport {\n  NativeBaseProvider,\n  Text,\n  Box,\n  extendTheme,\n  Button,\n  Pressable,\n} from \"native-base\";\nimport InputButton from \"./src/components/inputButton\";\n\nconst buttons = [\n  [\"CLEAR\", \"DEL\"],\n  [\"7\", \"8\", \"9\", \"/\"],\n  [\"4\", \"5\", \"6\", \"x\"],\n  [\"1\", \"2\", \"3\", \"-\"],\n  [\"0\", \".\", \"=\", \"+\"],\n];\n\nexport default function App() {\n  const theme = extendTheme({\n    // Add new color\n    primary: {\n      50: \"#E3F2F9\",\n      100: \"#C5E4F3\",\n      200: \"#A2D4EC\",\n      300: \"#7AC1E4\",\n      400: \"#47A9DA\",\n      500: \"#0088CC\",\n      600: \"#007AB8\",\n      700: \"#006BA1\",\n      800: \"#005885\",\n      900: \"#003F5E\",\n    },\n    // Redefinig only one shade, rest of the color will remain same.\n    amber: {\n      400: \"#d97706\",\n    },\n  });\n\n  return (\n    <NativeBaseProvider theme={theme}>\n      <Box>\n        {buttons.map((buttonRows, idx) => (\n          <Box style={style.container}>\n            {buttonRows.map((buttonitem, idx) => (\n              <Pressable style={style.button}>\n                {({ isHovered, isFocused, isPressed }) => {\n                  return (\n                    <Button\n                      bg={isFocused ? \"primary.900\" : \"primary.400\"}\n                      // onPress={() => handleInput(buttonitem)}\n                      key={idx}\n                    >\n                      <Text style={style.text}>{buttonitem}</Text>\n                    </Button>\n                  );\n                }}\n              </Pressable>\n            ))}\n            <br />\n          </Box>\n        ))}\n      </Box>\n    </NativeBaseProvider>\n  );\n}\n\nconst style = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n  },\n  button: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 1.5,\n    width: 100,\n    // width: '40px',\n    // height: '40px',\n    // borderRadius : \"50%\"\n  },\n  text: {\n    color: \"#fff\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}