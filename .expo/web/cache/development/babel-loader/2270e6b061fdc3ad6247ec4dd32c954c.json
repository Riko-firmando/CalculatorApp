{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NativeBaseProvider, Text, Box, extendTheme, Button, Pressable, AlertDialog, Center, Icon } from \"native-base\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport History from \"../components/history\";\nvar buttons = [[\"CLEAR\", \"DEL\", \"%\"], [\"7\", \"8\", \"9\", \"/\"], [\"4\", \"5\", \"6\", \"x\"], [\"1\", \"2\", \"3\", \"-\"], [\"0\", \".\", \"=\", \"+\"]];\nexport default function Calculator() {\n  var _useState = useState(\"0\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayValue = _useState2[0],\n      setDisplayValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nextValue = _useState4[0],\n      setNextValue = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      operator = _useState6[0],\n      setOperator = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      firstValue = _useState8[0],\n      setFirstValue = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      secondValue = _useState10[0],\n      setSecondValue = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      value = _useState12[0],\n      setValue = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      history = _useState14[0],\n      setHistory = _useState14[1];\n\n  var handleInput = function handleInput(input) {\n    switch (input) {\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n      case \"0\":\n        if (!value) {\n          if (secondValue == \"\" || \".\") {\n            setDisplayValue(displayValue != \"0\" ? displayValue + input : input);\n\n            if (!nextValue) {\n              setFirstValue(displayValue != \"0\" ? displayValue + input : input);\n            } else {\n              if (secondValue == \"0\") {\n                setSecondValue(input);\n                setDisplayValue(displayValue.substr(0, displayValue.length - 1) + input);\n              } else {\n                setSecondValue(secondValue == \".\" ? \"0\" + input : secondValue + input);\n              }\n            }\n          } else if (secondValue != \"\" && secondValue != \".\") {\n            setDisplayValue(input);\n            setFirstValue(input);\n            setOperator(operator);\n            setSecondValue(\"\");\n          }\n        } else {\n          if (secondValue == \"\") {\n            setDisplayValue(input);\n\n            if (!nextValue) {\n              setFirstValue(input);\n            } else {\n              setSecondValue(secondValue + input);\n            }\n          } else {\n            setDisplayValue(input);\n            setFirstValue(input);\n            setOperator(operator);\n            setSecondValue(\"\");\n          }\n\n          setValue(false);\n        }\n\n        break;\n\n      case \"+\":\n      case \"-\":\n      case \"x\":\n      case \"/\":\n      case \"%\":\n        if (firstValue == \"\") {\n          setFirstValue(\"0\");\n        }\n\n        if (secondValue == \"\") {\n          setOperator(input == \"x\" ? \"*\" : input);\n          setDisplayValue(nextValue == false ? displayValue + input : displayValue.substr(0, displayValue.length - 1) + input);\n          setValue(false);\n        } else {\n          var _result = eval(firstValue + operator + secondValue);\n\n          setDisplayValue((_result % 1 === 0 ? _result : _result.toFixed(3)) + input);\n          setFirstValue(_result % 1 === 0 ? _result : _result.toFixed(3));\n          setOperator(input == \"x\" ? \"*\" : input);\n          setSecondValue(\"\");\n          setValue(true);\n        }\n\n        setNextValue(true);\n        break;\n\n      case \"=\":\n        if (firstValue != \"\" && operator != \"\" && secondValue == \"\") {\n          setDisplayValue(firstValue);\n          setNextValue(false);\n          setOperator(\"\");\n          break;\n        } else if (displayValue == \"0\") {\n          break;\n        }\n\n        var result = eval(firstValue + operator + secondValue);\n\n        if (result % 1 != 0) {\n          var arrResult = result.toString().split(\".\");\n        }\n\n        setFirstValue(result % 1 === 0 ? result : arrResult[1].length < 3 ? result : result.toFixed(3));\n        setDisplayValue(!nextValue ? displayValue : secondValue == \"\" ? firstValue : result % 1 === 0 ? result : arrResult[1].length < 3 ? result : result.toFixed(3));\n        setSecondValue(\"\");\n        setOperator(\"\");\n        setValue(true);\n        setNextValue(false);\n        break;\n\n      case \"CLEAR\":\n        setDisplayValue(\"0\");\n        setNextValue(false);\n        setValue(false);\n        setOperator(\"\");\n        setFirstValue(\"\");\n        setSecondValue(\"\");\n        break;\n\n      case \".\":\n        if (firstValue.toString().indexOf(\".\") == -1 && nextValue == false) {\n          setDisplayValue(displayValue + input);\n\n          if (!nextValue) {\n            setFirstValue(firstValue == \"\" ? \"0\" + input : firstValue + input);\n          } else {\n            setSecondValue(secondValue == \"\" ? \"0\" + input : secondValue + input);\n          }\n        } else if (secondValue.toString().indexOf(\".\") == -1 && nextValue == true && operator != \"\") {\n          if (secondValue == \"\") {\n            setSecondValue(\"0\" + input);\n            setDisplayValue(displayValue + \"0\" + input);\n          } else {\n            setDisplayValue(displayValue + input);\n            setSecondValue(secondValue + input);\n          }\n        }\n\n        setValue(false);\n        break;\n\n      case \"DEL\":\n        setDisplayValue(displayValue.length == 1 ? \"0\" : displayValue.substr(0, displayValue.length - 1));\n\n        if (!nextValue) {\n          setFirstValue(firstValue.substr(0, firstValue.length - 1));\n        } else {\n          secondValue == \"\" ? setOperator(\"\") : setSecondValue(firstValue.substr(0, firstValue.length - 1));\n        }\n\n    }\n  };\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isOpen = _React$useState2[0],\n      setIsOpen = _React$useState2[1];\n\n  var onClose = function onClose() {\n    return setIsOpen(false);\n  };\n\n  var cancelRef = React.useRef(null);\n  console.log(parseInt(\"1\"));\n  return React.createElement(Box, {\n    style: style.container\n  }, React.createElement(Box, {\n    style: style.resultContainer\n  }, React.createElement(History, {\n    isOpen: isOpen,\n    onClose: onClose,\n    cancelRef: cancelRef\n  }), React.createElement(Box, {\n    bg: \"primary.800\",\n    style: style.result\n  }, firstValue + operator + secondValue, React.createElement(Text, {\n    fontFamily: \"Inter_900Black,\",\n    fontSize: 50,\n    color: \"#fff\"\n  }, displayValue))), React.createElement(Box, {\n    style: style.inputContainer\n  }, buttons.map(function (buttonRows, idx) {\n    return React.createElement(Box, {\n      style: style.inputRow,\n      key: idx\n    }, buttonRows.map(function (buttonitem, idx) {\n      return React.createElement(Pressable, {\n        onPress: function onPress() {\n          return handleInput(buttonitem);\n        },\n        style: style.button,\n        key: idx\n      }, function (_ref) {\n        var isHovered = _ref.isHovered,\n            isFocused = _ref.isFocused,\n            isPressed = _ref.isPressed;\n        return React.createElement(Box, {\n          bg: parseInt(buttonitem) == \"NaN\" ? isPressed ? \"primary.700\" : \"primary.500\" : isPressed ? \"primary.700\" : \"primary.600\",\n          p: 4,\n          rounded: 10,\n          style: {\n            transform: [{\n              scale: isPressed ? 0.93 : 1\n            }]\n          }\n        }, React.createElement(Text, {\n          color: \"#fff\"\n        }, buttonitem));\n      });\n    }), React.createElement(\"br\", null));\n  })));\n}\nvar style = StyleSheet.create({\n  container: {\n    minHeight: \"100vh\",\n    padding: 6,\n    backgroundColor: \"#2C3E50\"\n  },\n  resultContainer: {\n    flex: 4.5,\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginBottom: 10,\n    flexDirection: \"row\"\n  },\n  result: {\n    flex: 1,\n    marginHorizontal: 5,\n    paddingHorizontal: 5,\n    textAlign: \"end\",\n    marginBottom: 20\n  },\n  inputContainer: {\n    flex: 5.5\n  },\n  inputRow: {\n    flexDirection: \"row\"\n  },\n  button: {\n    flex: 1,\n    display: \"block\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    margin: 1.5,\n    marginBottom: 8,\n    fontFamily: \"BalsamiqSans_400Regular\"\n  },\n  text: {\n    color: \"#fff\"\n  },\n  historyContainer: {\n    alignItems: \"flex-end\"\n  },\n  historyBtn: {\n    width: 70\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Documents/dumbways/project/calcApp/src/screen/calculator.js"],"names":["React","useState","useEffect","NativeBaseProvider","Text","Box","extendTheme","Button","Pressable","AlertDialog","Center","Icon","FontAwesome","History","buttons","Calculator","displayValue","setDisplayValue","nextValue","setNextValue","operator","setOperator","firstValue","setFirstValue","secondValue","setSecondValue","value","setValue","history","setHistory","handleInput","input","substr","length","result","eval","toFixed","arrResult","toString","split","indexOf","isOpen","setIsOpen","onClose","cancelRef","useRef","console","log","parseInt","style","container","resultContainer","inputContainer","map","buttonRows","idx","inputRow","buttonitem","button","isHovered","isFocused","isPressed","transform","scale","StyleSheet","create","minHeight","padding","backgroundColor","flex","justifyContent","alignItems","marginBottom","flexDirection","marginHorizontal","paddingHorizontal","textAlign","display","margin","fontFamily","text","color","historyContainer","historyBtn","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TouchableOpacity, StyleSheet, View } from \"react-native\";\r\nimport {\r\n  NativeBaseProvider,\r\n  Text,\r\n  Box,\r\n  extendTheme,\r\n  Button,\r\n  Pressable,\r\n  AlertDialog,\r\n  Center,\r\n  Icon,\r\n} from \"native-base\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport History from \"../components/history\";\r\n\r\nconst buttons = [\r\n  [\"CLEAR\", \"DEL\", \"%\"],\r\n  [\"7\", \"8\", \"9\", \"/\"],\r\n  [\"4\", \"5\", \"6\", \"x\"],\r\n  [\"1\", \"2\", \"3\", \"-\"],\r\n  [\"0\", \".\", \"=\", \"+\"],\r\n];\r\n\r\nexport default function Calculator() {\r\n  // console.log(eval(\"8-2\"));\r\n  const [displayValue, setDisplayValue] = useState(\"0\");\r\n  const [nextValue, setNextValue] = useState(false);\r\n  const [operator, setOperator] = useState(\"\");\r\n  const [firstValue, setFirstValue] = useState(\"\");\r\n  const [secondValue, setSecondValue] = useState(\"\");\r\n  const [value, setValue] = useState(false);\r\n\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const handleInput = (input) => {\r\n    switch (input) {\r\n      case \"1\":\r\n      case \"2\":\r\n      case \"3\":\r\n      case \"4\":\r\n      case \"5\":\r\n      case \"6\":\r\n      case \"7\":\r\n      case \"8\":\r\n      case \"9\":\r\n      case \"0\":\r\n        if (!value) {\r\n          if (secondValue == \"\" || \".\") {\r\n            setDisplayValue(displayValue != \"0\" ? displayValue + input : input);\r\n            if (!nextValue) {\r\n              setFirstValue(displayValue != \"0\" ? displayValue + input : input);\r\n            } else {\r\n              if (secondValue == \"0\") {\r\n                setSecondValue(input);\r\n                setDisplayValue(\r\n                  displayValue.substr(0, displayValue.length - 1) + input\r\n                );\r\n              } else {\r\n                setSecondValue(\r\n                  secondValue == \".\" ? \"0\" + input : secondValue + input\r\n                );\r\n              }\r\n            }\r\n          } else if (secondValue != \"\" && secondValue != \".\") {\r\n            setDisplayValue(input);\r\n            setFirstValue(input);\r\n            setOperator(operator);\r\n            setSecondValue(\"\");\r\n          }\r\n        } else {\r\n          if (secondValue == \"\") {\r\n            setDisplayValue(input);\r\n            if (!nextValue) {\r\n              setFirstValue(input);\r\n            } else {\r\n              setSecondValue(secondValue + input);\r\n            }\r\n          } else {\r\n            // if(secondValue ==  )\r\n            setDisplayValue(input);\r\n            setFirstValue(input);\r\n            setOperator(operator);\r\n            setSecondValue(\"\");\r\n          }\r\n          setValue(false);\r\n        }\r\n        break;\r\n      case \"+\":\r\n      case \"-\":\r\n      case \"x\":\r\n      case \"/\":\r\n      case \"%\":\r\n        if (firstValue == \"\") {\r\n          setFirstValue(\"0\");\r\n        }\r\n        if (secondValue == \"\") {\r\n          setOperator(input == \"x\" ? \"*\" : input);\r\n          setDisplayValue(\r\n            nextValue == false\r\n              ? displayValue + input\r\n              : displayValue.substr(0, displayValue.length - 1) + input\r\n          );\r\n          setValue(false);\r\n        } else {\r\n          let result = eval(firstValue + operator + secondValue);\r\n          setDisplayValue(\r\n            (result % 1 === 0 ? result : result.toFixed(3)) + input\r\n          );\r\n          setFirstValue(result % 1 === 0 ? result : result.toFixed(3));\r\n          setOperator(input == \"x\" ? \"*\" : input);\r\n          setSecondValue(\"\");\r\n          setValue(true);\r\n        }\r\n        setNextValue(true);\r\n        break;\r\n      case \"=\":\r\n        if (firstValue != \"\" && operator != \"\" && secondValue == \"\") {\r\n          setDisplayValue(firstValue);\r\n          setNextValue(false);\r\n          setOperator(\"\");\r\n          break;\r\n        } else if (displayValue == \"0\") {\r\n          break;\r\n        }\r\n        let result = eval(firstValue + operator + secondValue);\r\n        if (result % 1 != 0) {\r\n          var arrResult = result.toString().split(\".\");\r\n        }\r\n        setFirstValue(\r\n          result % 1 === 0\r\n            ? result\r\n            : arrResult[1].length < 3\r\n            ? result\r\n            : result.toFixed(3)\r\n        );\r\n        setDisplayValue(\r\n          !nextValue\r\n            ? displayValue\r\n            : secondValue == \"\"\r\n            ? firstValue\r\n            : result % 1 === 0\r\n            ? result\r\n            : arrResult[1].length < 3\r\n            ? result\r\n            : result.toFixed(3)\r\n        );\r\n        setSecondValue(\"\");\r\n        setOperator(\"\");\r\n        setValue(true);\r\n        setNextValue(false);\r\n        break;\r\n      case \"CLEAR\":\r\n        setDisplayValue(\"0\");\r\n        setNextValue(false);\r\n        setValue(false);\r\n        setOperator(\"\");\r\n        setFirstValue(\"\");\r\n        setSecondValue(\"\");\r\n        break;\r\n      case \".\":\r\n        if (firstValue.toString().indexOf(\".\") == -1 && nextValue == false) {\r\n          setDisplayValue(displayValue + input);\r\n          if (!nextValue) {\r\n            setFirstValue(firstValue == \"\" ? \"0\" + input : firstValue + input);\r\n          } else {\r\n            setSecondValue(\r\n              secondValue == \"\" ? \"0\" + input : secondValue + input\r\n            );\r\n          }\r\n        } else if (\r\n          secondValue.toString().indexOf(\".\") == -1 &&\r\n          nextValue == true &&\r\n          operator != \"\"\r\n        ) {\r\n          if (secondValue == \"\") {\r\n            setSecondValue(\"0\" + input);\r\n            setDisplayValue(displayValue + \"0\" + input);\r\n          } else {\r\n            setDisplayValue(displayValue + input);\r\n            setSecondValue(secondValue + input);\r\n          }\r\n        }\r\n        setValue(false);\r\n        break;\r\n      case \"DEL\":\r\n        setDisplayValue(\r\n          displayValue.length == 1\r\n            ? \"0\"\r\n            : displayValue.substr(0, displayValue.length - 1)\r\n        );\r\n        if (!nextValue) {\r\n          setFirstValue(firstValue.substr(0, firstValue.length - 1));\r\n        } else {\r\n          secondValue == \"\"\r\n            ? setOperator(\"\")\r\n            : setSecondValue(firstValue.substr(0, firstValue.length - 1));\r\n        }\r\n    }\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const onClose = () => setIsOpen(false);\r\n\r\n  const cancelRef = React.useRef(null);\r\n\r\n  console.log(parseInt(\"1\"));\r\n\r\n  return (\r\n    <Box style={style.container}>\r\n      {/* <Box style={style.historyContainer}>\r\n        <Button style={style.historyBtn} onPress={() => setIsOpen(!isOpen)}>\r\n          <Icon\r\n            as={FontAwesome}\r\n            name=\"history\"\r\n            _dark={{\r\n              color: \"warmGray.50\",\r\n            }}\r\n          />\r\n        </Button>\r\n      </Box> */}\r\n      <Box style={style.resultContainer}>\r\n        <History isOpen={isOpen} onClose={onClose} cancelRef={cancelRef} />\r\n        <Box bg=\"primary.800\" style={style.result}>\r\n          {/* {\"nextValue : \" + nextValue}\r\n          {\"value : \" + value}\r\n          {\"first : \" + firstValue}\r\n          {\"operator : \" + operator}\r\n          {\"second : \" + secondValue} */}\r\n          {firstValue + operator + secondValue}\r\n          <Text fontFamily=\"Inter_900Black,\" fontSize={50} color=\"#fff\">\r\n            {displayValue}\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n      <Box style={style.inputContainer}>\r\n        {buttons.map((buttonRows, idx) => (\r\n          <Box style={style.inputRow} key={idx}>\r\n            {buttonRows.map((buttonitem, idx) => (\r\n              <Pressable\r\n                onPress={() => handleInput(buttonitem)}\r\n                style={style.button}\r\n                key={idx}\r\n              >\r\n                {({ isHovered, isFocused, isPressed }) => {\r\n                  return (\r\n                    <Box\r\n                      bg={\r\n                        // buttonitem == \"CLEAR\" ||\r\n                        // buttonitem == \"DEL\" ||\r\n                        // buttonitem == \"+\" ||\r\n                        // buttonitem == \"-\" ||\r\n                        // buttonitem == \"x\" ||\r\n                        // buttonitem == \"/\" ||\r\n                        // buttonitem == \"%\"\r\n                        parseInt(buttonitem) == \"NaN\"\r\n                          ? isPressed\r\n                            ? \"primary.700\"\r\n                            : \"primary.500\"\r\n                          : isPressed\r\n                          ? \"primary.700\"\r\n                          : \"primary.600\"\r\n                      }\r\n                      p={4}\r\n                      rounded={10}\r\n                      style={{\r\n                        transform: [\r\n                          {\r\n                            scale: isPressed ? 0.93 : 1,\r\n                          },\r\n                        ],\r\n                      }}\r\n                    >\r\n                      <Text color=\"#fff\">{buttonitem}</Text>\r\n                    </Box>\r\n                  );\r\n                }}\r\n              </Pressable>\r\n            ))}\r\n            <br />\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n  container: {\r\n    minHeight: \"100vh\",\r\n    padding: 6,\r\n    backgroundColor: \"#2C3E50\",\r\n  },\r\n  resultContainer: {\r\n    // height: \"35vh\",\r\n    flex: 4.5,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"flex-end\",\r\n    marginBottom: 10,\r\n    flexDirection: \"row\",\r\n  },\r\n  result: {\r\n    flex: 1,\r\n    marginHorizontal: 5,\r\n    paddingHorizontal: 5,\r\n    textAlign: \"end\",\r\n    marginBottom: 20,\r\n  },\r\n  inputContainer: {\r\n    // height: \"65vh\",\r\n    flex: 5.5,\r\n  },\r\n  inputRow: {\r\n    flexDirection: \"row\",\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    display: \"block\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    margin: 1.5,\r\n    marginBottom: 8,\r\n    fontFamily: \"BalsamiqSans_400Regular\",\r\n  },\r\n  text: {\r\n    color: \"#fff\",\r\n  },\r\n  historyContainer: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n  historyBtn: {\r\n    width: 70,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}