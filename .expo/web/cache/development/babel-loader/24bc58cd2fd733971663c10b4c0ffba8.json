{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NativeBaseProvider, Text, Box, extendTheme, Button, Pressable } from \"native-base\";\nimport InputButton from \"./src/components/inputButton\";\nvar buttons = [[\"CLEAR\", \"DEL\"], [\"7\", \"8\", \"9\", \"/\"], [\"4\", \"5\", \"6\", \"x\"], [\"1\", \"2\", \"3\", \"-\"], [\"0\", \".\", \"=\", \"+\"]];\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setresult = _useState2[1];\n\n  var theme = extendTheme({\n    primary: {\n      50: \"#E3F2F9\",\n      100: \"#C5E4F3\",\n      200: \"#A2D4EC\",\n      300: \"#7AC1E4\",\n      400: \"#47A9DA\",\n      500: \"#0088CC\",\n      600: \"#007AB8\",\n      700: \"#006BA1\",\n      800: \"#005885\",\n      900: \"#003F5E\"\n    },\n    amber: {\n      400: \"#d97706\"\n    }\n  });\n\n  var handleInput = function handleInput(input) {\n    setresult(result + input);\n  };\n\n  return React.createElement(NativeBaseProvider, {\n    theme: theme\n  }, React.createElement(Box, {\n    bg: \"primary.700\",\n    style: style.container\n  }, React.createElement(Box, {\n    style: style.resultContainer\n  }, React.createElement(Box, {\n    bg: \"primary.800\",\n    style: style.result\n  }, React.createElement(Text, {\n    fontSize: 50,\n    color: \"#fff\"\n  }, result))), React.createElement(\"buttonInput\", {\n    buttons: buttons\n  })));\n}\nvar style = StyleSheet.create({\n  container: {\n    minHeight: \"100vh\",\n    padding: 6\n  },\n  resultContainer: {\n    flex: 4.5,\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginBottom: 10,\n    flexDirection: \"row\"\n  },\n  result: {\n    flex: 1,\n    marginHorizontal: 5,\n    paddingHorizontal: 5,\n    textAlign: \"end\"\n  },\n  inputContainer: {\n    flex: 5.5\n  },\n  inputRow: {\n    flexDirection: \"row\"\n  },\n  button: {\n    flex: 1,\n    display: \"block\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    margin: 1.5,\n    marginBottom: 8\n  },\n  text: {\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Documents/dumbways/project/calcApp/App.js"],"names":["React","useState","NativeBaseProvider","Text","Box","extendTheme","Button","Pressable","InputButton","buttons","App","result","setresult","theme","primary","amber","handleInput","input","style","container","resultContainer","StyleSheet","create","minHeight","padding","flex","justifyContent","alignItems","marginBottom","flexDirection","marginHorizontal","paddingHorizontal","textAlign","inputContainer","inputRow","button","display","margin","text","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TouchableOpacity, StyleSheet } from \"react-native\";\nimport {\n  NativeBaseProvider,\n  Text,\n  Box,\n  extendTheme,\n  Button,\n  Pressable,\n} from \"native-base\";\nimport InputButton from \"./src/components/inputButton\";\n\nconst buttons = [\n  [\"CLEAR\", \"DEL\"],\n  [\"7\", \"8\", \"9\", \"/\"],\n  [\"4\", \"5\", \"6\", \"x\"],\n  [\"1\", \"2\", \"3\", \"-\"],\n  [\"0\", \".\", \"=\", \"+\"],\n];\n\nexport default function App() {\n  const [result, setresult] = useState(0);\n  const theme = extendTheme({\n    // Add new color\n    primary: {\n      50: \"#E3F2F9\",\n      100: \"#C5E4F3\",\n      200: \"#A2D4EC\",\n      300: \"#7AC1E4\",\n      400: \"#47A9DA\",\n      500: \"#0088CC\",\n      600: \"#007AB8\",\n      700: \"#006BA1\",\n      800: \"#005885\",\n      900: \"#003F5E\",\n    },\n    // Redefinig only one shade, rest of the color will remain same.\n    amber: {\n      400: \"#d97706\",\n    },\n  });\n\n  const handleInput = (input) => {\n    setresult(result + input);\n  };\n\n  return (\n    <NativeBaseProvider theme={theme}>\n      <Box bg=\"primary.700\" style={style.container}>\n        <Box style={style.resultContainer}>\n          <Box bg=\"primary.800\" style={style.result}>\n            <Text fontSize={50} color=\"#fff\">\n              {result}\n            </Text>\n          </Box>\n        </Box>\n        <buttonInput buttons={buttons} />\n        {/* <Box style={style.inputContainer}>\n          {buttons.map((buttonRows, idx) => (\n            <Box style={style.inputRow}>\n              {buttonRows.map((buttonitem, idx) => (\n                <Pressable\n                  onPress={() => handleInput(buttonitem)}\n                  style={style.button}\n                >\n                  {({ isHovered, isFocused, isPressed }) => {\n                    return (\n                      <Box\n                        bg={isPressed ? \"primary.900\" : \"primary.400\"}\n                        p={4}\n                        rounded={10}\n                        style={{\n                          transform: [\n                            {\n                              scale: isPressed ? 0.93 : 1,\n                            },\n                          ],\n                        }}\n                      >\n                        <Text color=\"#fff\">{buttonitem}</Text>\n                      </Box>\n                    );\n                  }}\n                </Pressable>\n              ))}\n              <br />\n            </Box>\n          ))}\n        </Box> */}\n      </Box>\n    </NativeBaseProvider>\n  );\n}\n\nconst style = StyleSheet.create({\n  container: {\n    minHeight: \"100vh\",\n    padding: 6,\n  },\n  resultContainer: {\n    // height: \"35vh\",\n    flex: 4.5,\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginBottom: 10,\n    flexDirection: \"row\",\n  },\n  result: {\n    flex: 1,\n    marginHorizontal: 5,\n    paddingHorizontal: 5,\n    textAlign: \"end\",\n  },\n  inputContainer: {\n    // height: \"65vh\",\n    flex: 5.5,\n  },\n  inputRow: {\n    flexDirection: \"row\",\n  },\n  button: {\n    flex: 1,\n    display: \"block\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    margin: 1.5,\n    marginBottom: 8,\n  },\n  text: {\n    color: \"#fff\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}